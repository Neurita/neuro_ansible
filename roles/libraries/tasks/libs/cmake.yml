---

- set_fact:
    cmake_version: "3.11.1"
    unarchive_dir: "{{ soft_dir }}/cmake"

- set_fact:
    tarball_url: "https://cmake.org/files/v3.11/cmake-3.11.1.tar.gz"
    tarball_hash: "sha256:57bebc6ca4d1d42c6385249d148d9216087e0fda57a47dc5c858790a70217d0c"
    tarball_path: "{{ unarchive_dir }}/cmake-{{ cmake_version }}.tar.gz"
    #tarball_path: "{{ playbook_dir }}/downloads"
    install_dir: "{{ unarchive_dir }}/cmake-{{ cmake_version }}"
    check_if_exists: "{{ user_local_dir }}/bin/cmake"

- name: cmake | Create download directory for CMake
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ unarchive_dir }}"

# - name: cmake | Download CMake locally
#   local_action: get_url url="{{ tarball_url }}" dest="{{ tarball_path }}" checksum="{{ tarball_hash }}"

- name: cmake | Download CMake
  get_url:
    url: "{{ tarball_url }}"
    dest: "{{ tarball_path }}"
    checksum: "{{ tarball_hash }}"

- name: cmake | Unpack CMake
  unarchive:
    src: "{{ tarball_path }}"
    dest: "{{ unarchive_dir }}"
    creates: "{{ install_dir }}/bootstrap"
    remote_src: yes

- name: cmake | Check if CMake is in the system
  stat:
    path: "{{ check_if_exists }}"
  register: cmake_exists

- name: cmake | Install build dependencies
  apt:
    name: cmake
    state: build-dep
  become: yes
  become_method: sudo
  when: overwrite_if_exists or not cmake_exists.stat.exists

- name: cmake | CMake bootstrap, be patient
  command: "{{ install_dir }}/bootstrap --prefix={{ user_local_dir }} --system-curl"
  args:
    chdir: "{{ install_dir }}"
  creates: "{{ install_dir }}/Makefile"
  when: overwrite_if_exists or not cmake_exists.stat.exists

- name: cmake | Build CMake - make, be patient
  command: make
  args:
    chdir: "{{ install_dir }}"
  when: overwrite_if_exists or not cmake_exists.stat.exists

- name: cmake | Build CMake - make install
  command: make install
  args:
    chdir: "{{ install_dir }}"
  become: yes
  become_method: sudo
  when: overwrite_if_exists or not cmake_exists.stat.exists
